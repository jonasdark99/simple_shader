name: Flutter Build (Android + iOS)

on:
  push:
    branches: [main, dev, master]

env:
  APP_VERSION: '1.0.0'
  BUILD_NUMBER: '1'

jobs:
  android:
    name: Android Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - run: flutter pub get

      - name: Determine version
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '"')
          echo "APP_VERSION=${VERSION%+*}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${VERSION#*+}" >> $GITHUB_ENV

      - run: flutter build apk --release --build-name=$APP_VERSION --build-number=$BUILD_NUMBER
      - run: flutter build appbundle --release --build-name=$APP_VERSION --build-number=$BUILD_NUMBER

      - run: mkdir -p build/outputs
      - run: cp build/app/outputs/flutter-apk/app-release.apk build/outputs/app-$APP_VERSION+$BUILD_NUMBER.apk
      - run: cp build/app/outputs/bundle/release/app-release.aab build/outputs/app-$APP_VERSION+$BUILD_NUMBER.aab

      - uses: actions/upload-artifact@v2
        with:
          name: android-builds
          path: build/outputs/

  ios:
    name: iOS Build
    needs: android
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - run: flutter pub get

      - name: Determine version
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '"')
          echo "APP_VERSION=${VERSION%+*}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${VERSION#*+}" >> $GITHUB_ENV

      - run: flutter build ios --release --no-codesign --build-name=$APP_VERSION --build-number=$BUILD_NUMBER

      - run: mkdir -p build/outputs
      - run: cp -r build/ios/iphoneos/Runner.app build/outputs/
      - run: zip -r build/outputs/ios-app-$APP_VERSION+$BUILD_NUMBER.zip build/outputs/Runner.app

      - uses: actions/upload-artifact@v2
        with:
          name: ios-builds
          path: build/outputs/

  release:
    name: Create Release
    if: github.ref == 'refs/heads/main'
    needs: [android, ios]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: android-builds
          path: android-artifacts

      - uses: actions/download-artifact@v2
        with:
          name: ios-builds
          path: ios-artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.APP_VERSION }}+${{ env.BUILD_NUMBER }}
          name: Release v${{ env.APP_VERSION }} (Build ${{ env.BUILD_NUMBER }})
          files: |
            android-artifacts/app-${{ env.APP_VERSION }}+${{ env.BUILD_NUMBER }}.*
            ios-artifacts/ios-app-${{ env.APP_VERSION }}+${{ env.BUILD_NUMBER }}.zip