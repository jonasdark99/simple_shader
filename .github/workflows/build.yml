name: Flutter CI/CD Pipeline

on:
  push:
    branches: ['**']  # All branches
    tags: ['*']       # All tags
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
      
      - name: Check for test dependencies
        id: check_tests
        run: |
          if grep -q "flutter_test:" pubspec.yaml; then
            echo "has_tests=true" >> $GITHUB_OUTPUT
          else
            echo "has_tests=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Run Tests (if available)
        if: steps.check_tests.outputs.has_tests == 'true'
        run: |
          flutter pub get
          flutter test
      
      - name: Skip Tests (no dependencies)
        if: steps.check_tests.outputs.has_tests == 'false'
        run: echo "Skipping tests - no flutter_test dependency found"

  # Runs on main/master pushes AND any tag (including experimental)
  build:
    name: Build Artifacts
    needs: test
    if: |
      github.event_name == 'push' && (
        github.ref == 'refs/heads/main' ||
        github.ref == 'refs/heads/master' ||
        startsWith(github.ref, 'refs/tags/'))
    strategy:
      matrix:
        platform: [android, ios]
    runs-on: ${{ matrix.platform == 'ios' && 'macos-latest' || 'ubuntu-latest' }}
    
    steps:
      - uses: actions/checkout@v4
      - name: Extract version info
        id: version
        run: |
          # For tags, use tag name as version
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            echo "VERSION=$TAG_NAME" >> $GITHUB_ENV
            echo "BUILD_NUMBER=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          else
            # For branches, use pubspec version
            FULL_VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '"')
            echo "VERSION=${FULL_VERSION%+*}" >> $GITHUB_ENV
            echo "BUILD_NUMBER=${FULL_VERSION#*+}" >> $GITHUB_ENV
          fi

      - name: Setup Java (Android only)
        if: matrix.platform == 'android'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          cache: true

      - name: Build Android
        if: matrix.platform == 'android'
        run: |
          flutter build apk --release \
            --build-name=$VERSION --build-number=$BUILD_NUMBER
          flutter build appbundle --release \
            --build-name=$VERSION --build-number=$BUILD_NUMBER
          mkdir -p artifacts/android
          cp build/app/outputs/flutter-apk/app-release.apk artifacts/android/app-$VERSION+$BUILD_NUMBER.apk
          cp build/app/outputs/bundle/release/app-release.aab artifacts/android/app-$VERSION+$BUILD_NUMBER.aab

      - name: Build iOS
        if: matrix.platform == 'ios'
        run: |
          flutter build ios --release --no-codesign \
            --build-name=$VERSION --build-number=$BUILD_NUMBER
          mkdir -p artifacts/ios
          cd build/ios/iphoneos
          zip -r ../../../artifacts/ios/app-$VERSION+$BUILD_NUMBER.zip Runner.app

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-artifacts-${{ env.BUILD_NUMBER }}
          path: artifacts/${{ matrix.platform }}/*
          retention-days: 7

  # Only creates releases for main/master (not experimental tags)
  release:
    name: Create Release
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: "*-artifacts-*"
          merge: true
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}+${{ env.BUILD_NUMBER }}
          name: Release v${{ env.VERSION }}
          files: |
            artifacts/android/*.apk
            artifacts/android/*.aab
            artifacts/ios/*.zip