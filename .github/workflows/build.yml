name: Flutter Android CI/CD Pipeline

on:
  push:
    branches: ['**']  # All branches
    tags: ['*']       # All tags
  pull_request:
    branches: [main, master]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      build_number: ${{ steps.version.outputs.build_number }}
      is_tag: ${{ steps.version.outputs.is_tag }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Extract version info
        id: version
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            echo "version=$TAG_NAME" >> $GITHUB_OUTPUT
            echo "build_number=$(date +%Y%m%d%H%M)" >> $GITHUB_OUTPUT
            echo "is_tag=true" >> $GITHUB_OUTPUT
          else
            FULL_VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '"' || echo "0.0.0+0")
            echo "version=${FULL_VERSION%+*}" >> $GITHUB_OUTPUT
            echo "build_number=${FULL_VERSION#*+}" >> $GITHUB_OUTPUT
            echo "is_tag=false" >> $GITHUB_OUTPUT
          fi

  test:
    name: Run Tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
      
      - name: Check for test dependencies
        id: check_tests
        run: |
          if grep -q "flutter_test:" pubspec.yaml; then
            echo "has_tests=true" >> $GITHUB_OUTPUT
          else
            echo "has_tests=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Run Tests (if available)
        if: steps.check_tests.outputs.has_tests == 'true'
        run: |
          flutter pub get
          flutter test
      
      - name: Skip Tests (no dependencies)
        if: steps.check_tests.outputs.has_tests == 'false'
        run: echo "Skipping tests - no flutter_test dependency found"

  android:
    name: Build Android
    needs: [setup, test]
    if: |
      github.event_name == 'push' && (
        github.ref == 'refs/heads/main' ||
        github.ref == 'refs/heads/master' ||
        needs.setup.outputs.is_tag == 'true'
      )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          cache: true

      - name: Build APK and App Bundle
        run: |
          flutter pub get
          flutter build apk --release \
            --build-name=${{ needs.setup.outputs.version }} \
            --build-number=${{ needs.setup.outputs.build_number }}
          flutter build appbundle --release \
            --build-name=${{ needs.setup.outputs.version }} \
            --build-number=${{ needs.setup.outputs.build_number }}
          
          mkdir -p artifacts
          cp build/app/outputs/flutter-apk/app-release.apk artifacts/app-${{ needs.setup.outputs.version }}+${{ needs.setup.outputs.build_number }}.apk
          cp build/app/outputs/bundle/release/app-release.aab artifacts/app-${{ needs.setup.outputs.version }}+${{ needs.setup.outputs.build_number }}.aab

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts-${{ needs.setup.outputs.build_number }}
          path: artifacts/*
          retention-days: 7

  release:
    name: Create Release
    needs: android
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: android-artifacts-${{ needs.setup.outputs.build_number }}
          path: artifacts
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.setup.outputs.version }}+${{ needs.setup.outputs.build_number }}
          name: ${{ needs.setup.outputs.version }}
          files: |
            artifacts/app-*.apk
            artifacts/app-*.aab
          body: |
            ### Android Release ${{ needs.setup.outputs.version }}+${{ needs.setup.outputs.build_number }}
            - APK and App Bundle included
            - Built from: ${{ github.ref }}
            - Workflow run: ${{ github.run_number }}